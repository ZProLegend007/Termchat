name: Build macOS Binary arm64

on:
  workflow_dispatch:
  push:
    paths:
      - 'termchat.py'
      - 'requirements.txt'
      - '.github/workflows/build-macos-arm64-app.yml'
      - 'icons/*'

jobs:
  build-macos-arm64-app:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python 3.10 via Homebrew
        run: brew install python@3.10

      - name: Find .icns icon file
        id: find_icon
        shell: bash
        run: |
          ICON_PATH=$(find icons -type f -name '*.icns' | head -n 1 || true)
          echo "icon_path=$ICON_PATH" >> "$GITHUB_OUTPUT"

      - name: Generate hidden-import args
        id: gen_hidden_imports
        shell: bash
        run: |
          HIDDEN_IMPORTS=""
          while IFS= read -r module; do
            MOD=$(echo "$module" | cut -d'=' -f1 | cut -d'<' -f1 | cut -d'>' -f1 | sed 's/\[.*\]//g' | xargs)
            if [ -n "$MOD" ]; then
              HIDDEN_IMPORTS="$HIDDEN_IMPORTS --hidden-import $MOD"
            fi
          done < requirements.txt
          echo "HIDDEN_IMPORTS=$HIDDEN_IMPORTS" >> "$GITHUB_ENV"

      - name: Install PyInstaller and project requirements
        run: |
          python3.10 -m pip install --upgrade pip pyinstaller
          python3.10 -m pip install -r requirements.txt

      - name: Build arm64 .app with PyInstaller
        shell: bash
        run: |
          rm -rf dist_arm64 build_arm64
          ICON_PATH="${{ steps.find_icon.outputs.icon_path }}"
          if [ -n "$ICON_PATH" ]; then
            pyinstaller --windowed ${{ env.HIDDEN_IMPORTS }} --distpath dist_arm64 --workpath build_arm64 --name Termchat --icon "$ICON_PATH" termchat.py
          else
            pyinstaller --windowed ${{ env.HIDDEN_IMPORTS }} --distpath dist_arm64 --workpath build_arm64 --name Termchat termchat.py
          fi

      - name: Zip Termchat folder 
        run: |
          cd dist_arm64
          zip -r Termchat-MacOS-arm64.zip Termchat.app

      - name: Upload zipped Termchat.app as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: Termchat-MacOS-arm64
          path: dist_arm64/Termchat-MacOS-arm64.zip
